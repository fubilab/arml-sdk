//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.MagicLantern
{
    [Serializable]
    public class RtabmapInfoMsg : Message
    {
        public const string k_RosMessageName = "magic_lantern_msgs/RtabmapInfo";
        public override string RosMessageName => k_RosMessageName;

        // #######################################
        //  RTAB-Map info with statistics 
        // #######################################
        public HeaderMsg header;
        public int refId;
        public int loopClosureId;
        public int proximityDetectionId;
        public int landmarkId;

        public RtabmapInfoMsg()
        {
            this.header = new HeaderMsg();
            this.refId = 0;
            this.loopClosureId = 0;
            this.proximityDetectionId = 0;
            this.landmarkId = 0;
        }

        public RtabmapInfoMsg(HeaderMsg header, int refId, int loopClosureId, int proximityDetectionId, int landmarkId)
        {
            this.header = header;
            this.refId = refId;
            this.loopClosureId = loopClosureId;
            this.proximityDetectionId = proximityDetectionId;
            this.landmarkId = landmarkId;
        }

        public static RtabmapInfoMsg Deserialize(MessageDeserializer deserializer) => new RtabmapInfoMsg(deserializer);

        private RtabmapInfoMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.refId);
            deserializer.Read(out this.loopClosureId);
            deserializer.Read(out this.proximityDetectionId);
            deserializer.Read(out this.landmarkId);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.refId);
            serializer.Write(this.loopClosureId);
            serializer.Write(this.proximityDetectionId);
            serializer.Write(this.landmarkId);
        }

        public override string ToString()
        {
            return "RtabmapInfoMsg: " +
            "\nheader: " + header.ToString() +
            "\nrefId: " + refId.ToString() +
            "\nloopClosureId: " + loopClosureId.ToString() +
            "\nproximityDetectionId: " + proximityDetectionId.ToString() +
            "\nlandmarkId: " + landmarkId.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
