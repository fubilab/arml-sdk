//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.MagicLantern
{
    [Serializable]
    public class RtabmapOdomMsg : Message
    {
        public const string k_RosMessageName = "magic_lantern_msgs/RtabmapOdom";
        public override string RosMessageName => k_RosMessageName;

        public HeaderMsg header;
        public bool lost;
        public int matches;
        public int inliers;
        public int features;
        public int localMapSize;
        public int localKeyFrames;
        public int localBundleOutliers;
        public int localBundleConstraints;
        public float localBundleTime;
        public bool keyFrameAdded;
        public float timeEstimation;
        public float timeParticleFiltering;
        public float stamp;
        public float interval;
        public float distanceTravelled;
        public int memoryUsage;
        //  MB

        public RtabmapOdomMsg()
        {
            this.header = new HeaderMsg();
            this.lost = false;
            this.matches = 0;
            this.inliers = 0;
            this.features = 0;
            this.localMapSize = 0;
            this.localKeyFrames = 0;
            this.localBundleOutliers = 0;
            this.localBundleConstraints = 0;
            this.localBundleTime = 0.0f;
            this.keyFrameAdded = false;
            this.timeEstimation = 0.0f;
            this.timeParticleFiltering = 0.0f;
            this.stamp = 0.0f;
            this.interval = 0.0f;
            this.distanceTravelled = 0.0f;
            this.memoryUsage = 0;
        }

        public RtabmapOdomMsg(HeaderMsg header, bool lost, int matches, int inliers, int features, int localMapSize, int localKeyFrames, int localBundleOutliers, int localBundleConstraints, float localBundleTime, bool keyFrameAdded, float timeEstimation, float timeParticleFiltering, float stamp, float interval, float distanceTravelled, int memoryUsage)
        {
            this.header = header;
            this.lost = lost;
            this.matches = matches;
            this.inliers = inliers;
            this.features = features;
            this.localMapSize = localMapSize;
            this.localKeyFrames = localKeyFrames;
            this.localBundleOutliers = localBundleOutliers;
            this.localBundleConstraints = localBundleConstraints;
            this.localBundleTime = localBundleTime;
            this.keyFrameAdded = keyFrameAdded;
            this.timeEstimation = timeEstimation;
            this.timeParticleFiltering = timeParticleFiltering;
            this.stamp = stamp;
            this.interval = interval;
            this.distanceTravelled = distanceTravelled;
            this.memoryUsage = memoryUsage;
        }

        public static RtabmapOdomMsg Deserialize(MessageDeserializer deserializer) => new RtabmapOdomMsg(deserializer);

        private RtabmapOdomMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.lost);
            deserializer.Read(out this.matches);
            deserializer.Read(out this.inliers);
            deserializer.Read(out this.features);
            deserializer.Read(out this.localMapSize);
            deserializer.Read(out this.localKeyFrames);
            deserializer.Read(out this.localBundleOutliers);
            deserializer.Read(out this.localBundleConstraints);
            deserializer.Read(out this.localBundleTime);
            deserializer.Read(out this.keyFrameAdded);
            deserializer.Read(out this.timeEstimation);
            deserializer.Read(out this.timeParticleFiltering);
            deserializer.Read(out this.stamp);
            deserializer.Read(out this.interval);
            deserializer.Read(out this.distanceTravelled);
            deserializer.Read(out this.memoryUsage);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.lost);
            serializer.Write(this.matches);
            serializer.Write(this.inliers);
            serializer.Write(this.features);
            serializer.Write(this.localMapSize);
            serializer.Write(this.localKeyFrames);
            serializer.Write(this.localBundleOutliers);
            serializer.Write(this.localBundleConstraints);
            serializer.Write(this.localBundleTime);
            serializer.Write(this.keyFrameAdded);
            serializer.Write(this.timeEstimation);
            serializer.Write(this.timeParticleFiltering);
            serializer.Write(this.stamp);
            serializer.Write(this.interval);
            serializer.Write(this.distanceTravelled);
            serializer.Write(this.memoryUsage);
        }

        public override string ToString()
        {
            return "RtabmapOdomMsg: " +
            "\nheader: " + header.ToString() +
            "\nlost: " + lost.ToString() +
            "\nmatches: " + matches.ToString() +
            "\ninliers: " + inliers.ToString() +
            "\nfeatures: " + features.ToString() +
            "\nlocalMapSize: " + localMapSize.ToString() +
            "\nlocalKeyFrames: " + localKeyFrames.ToString() +
            "\nlocalBundleOutliers: " + localBundleOutliers.ToString() +
            "\nlocalBundleConstraints: " + localBundleConstraints.ToString() +
            "\nlocalBundleTime: " + localBundleTime.ToString() +
            "\nkeyFrameAdded: " + keyFrameAdded.ToString() +
            "\ntimeEstimation: " + timeEstimation.ToString() +
            "\ntimeParticleFiltering: " + timeParticleFiltering.ToString() +
            "\nstamp: " + stamp.ToString() +
            "\ninterval: " + interval.ToString() +
            "\ndistanceTravelled: " + distanceTravelled.ToString() +
            "\nmemoryUsage: " + memoryUsage.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
