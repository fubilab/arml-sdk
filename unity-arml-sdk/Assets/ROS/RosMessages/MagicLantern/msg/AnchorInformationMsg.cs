//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.MagicLantern
{
    [Serializable]
    public class AnchorInformationMsg : Message
    {
        public const string k_RosMessageName = "magic_lantern_msgs/AnchorInformation";
        public override string RosMessageName => k_RosMessageName;

        //  This message contains a struct with Anchor's information
        public int id;
        //  anchor_id 
        public float[] location;
        //  x, y, z, roll, pitch, yaw    
        public float volume_size;
        //  side lenght of the cube (the same for every side)
        public float filter_proximity;
        //  radius of the cylinder around the anchor

        public AnchorInformationMsg()
        {
            this.id = 0;
            this.location = new float[6];
            this.volume_size = 0.0f;
            this.filter_proximity = 0.0f;
        }

        public AnchorInformationMsg(int id, float[] location, float volume_size, float filter_proximity)
        {
            this.id = id;
            this.location = location;
            this.volume_size = volume_size;
            this.filter_proximity = filter_proximity;
        }

        public static AnchorInformationMsg Deserialize(MessageDeserializer deserializer) => new AnchorInformationMsg(deserializer);

        private AnchorInformationMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.id);
            deserializer.Read(out this.location, sizeof(float), 6);
            deserializer.Read(out this.volume_size);
            deserializer.Read(out this.filter_proximity);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.id);
            serializer.Write(this.location);
            serializer.Write(this.volume_size);
            serializer.Write(this.filter_proximity);
        }

        public override string ToString()
        {
            return "AnchorInformationMsg: " +
            "\nid: " + id.ToString() +
            "\nlocation: " + System.String.Join(", ", location.ToList()) +
            "\nvolume_size: " + volume_size.ToString() +
            "\nfilter_proximity: " + filter_proximity.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
